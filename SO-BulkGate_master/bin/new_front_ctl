#!/bin/sh



BGUSER=box
SOCK_PATH=/var/run/bulk_gate/sock
FRONT=/www/psgi/bulk-front.psgi
TWIGGY=$(whereis twiggy)
TWIGGY=${TWIGGY#twiggy: }

if [ -n "$TWIGGY" ]; then 
    TWIGGY="env PATH=$PATH perl $TWIGGY"    
else
    echo warn: absolute path to twiggy not found
    TWIGGY=twiggy
fi


ACTION=${1:-'status'}
[ "$ACTION" = "$1" ] && shift

start() {

    procs=0

    [ -e $SOCK_PATH ] || {
        mkdir -p $SOCK_PATH || exit 1
        chown -R $BGUSER:$BGUSER $SOCK_PATH/..
        chmod a+w $SOCK_PATH
    }

    

    while [ $procs != $1 ]; 
    do
        procs=$(($procs + 1))
        sock=$SOCK_PATH/front$procs

        sudo -u $BGUSER $TWIGGY --listen $sock $2 &


        for i in 0.1 0.5 1.0; do
            if [ -e $sock ]; then
                chmod go+w $sock && break;
            else
                sleep $i;
            fi
        done;
        
        echo frontend $procs started
    done;
}



status() {
    ps aux | perl -n -e 'print $_ if /^.+?twiggy.+front.p.+$/'
}

get_pids() {
    PIDS=$(ps aux | perl -n -e 'print " $1" if /\s+(\d+).+?twiggy.+front\.p.+$/')
    ( [ "$PIDS" ] && return 0 ) || return 1
}


stop() {
    get_pids 
    [ "$PIDS" ] || {
        echo Nothing stopped;
        exit 0;
    }

    sudo kill $PIDS
    get_pids && {
        echo Force stop, kill SIGKILL $PIDS;
        sudo kill -9 $PIDS;
    }

    sudo rm $SOCK_PATH/front[1-9]
    echo Frontends is stopped
}

if [ "$ACTION" ] && [ "$ACTION" != "status" ]; then
    [ $(id -u) = $(id -u $BGUSER) ] || [ $(id -u)  = "0" ] || {
        echo operation $ACTION is not permitted for $USER;
        exit 1;
    }
fi


case "$ACTION" in
    start) 
        start ${1:-3} $FRONT
        ;;

    stop)
        stop
        ;;
#    restart)
#        get_pids && stop
#        start ${1:-3} ${2:-front.psgi}
#        ;;
    status|"")
        status
        ;;
esac


